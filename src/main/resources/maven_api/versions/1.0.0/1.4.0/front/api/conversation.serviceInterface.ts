/**
 * FpGen api
 * API for fake profile dataset generator project
 *
 * The version of the OpenAPI document: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Conversation } from '../model/models';
import { ConversationBatchCreation } from '../model/models';
import { ConversationMessage } from '../model/models';
import { ConversationsPage } from '../model/models';
import { ErrorResponse } from '../model/models';
import { PagedConversationQuery } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ConversationServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Delete a conversation by id
     * Delete a conversation by id
     * @param conversationId 
     */
    deleteConversationById(conversationId: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Generate conversations
     * Generate conversations
     * @param conversationBatchCreation 
     */
    generateConversations(conversationBatchCreation: ConversationBatchCreation, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Get a conversation by id
     * Get a conversation by id
     * @param conversationId 
     */
    getConversationById(conversationId: string, extraHttpRequestParams?: any): Observable<Conversation>;

    /**
     * Get a conversation by id
     * Get a conversation by id
     * @param conversationId 
     * @param conversationInstantMessageId 
     */
    getConversationInstantMessageListById(conversationId: string, conversationInstantMessageId: string, extraHttpRequestParams?: any): Observable<Array<ConversationMessage>>;

    /**
     * Search conversations with pagination
     * Search conversations with pagination
     * @param pagedConversationQuery 
     */
    searchConversationsPaginate(pagedConversationQuery?: PagedConversationQuery, extraHttpRequestParams?: any): Observable<ConversationsPage>;

}
